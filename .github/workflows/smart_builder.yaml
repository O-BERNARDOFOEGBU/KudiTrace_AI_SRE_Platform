name: KudiTrace Smart Bootstrap & Build

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  schedule:
    # Run every 6 hours
    - cron: '0 */6 * * *'

jobs:
  evolve:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    timeout-minutes: 60

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: 'npm'

      - name: Bootstrap full-stack project (safe writes)
        env:
          GH_PAT: ${{ secrets.GH_PAT }}
        run: |
          set -e
          git config user.name "O-BERNARDOFOEGBU"
          git config user.email "obinnaofoegbu71@gmail.com"

          # create directories
          mkdir -p pages backend/node backend/go backend/rust scripts docs

          DATE=$(date -u +"%Y-%m-%d")
          TIME=$(date -u +"%H:%M:%S UTC")

          # --- package.json (root) ---
          if [ ! -f "package.json" ]; then
            printf '%s\n' '{' \
              '  "name": "kuditrace-ai-sre-platform",' \
              '  "version": "0.1.0",' \
              '  "private": true,' \
              '  "scripts": {' \
              '    "dev": "next dev",' \
              '    "build": "next build",' \
              '    "start": "next start"' \
              '  },' \
              '  "dependencies": {}' \
              '}' > package.json
            echo "Created package.json"
          else
            echo "package.json exists"
          fi

          # --- Next.js page (pages/index.tsx) ---
          PAGE_FILE="pages/index.tsx"
          if [ ! -f "$PAGE_FILE" ]; then
            printf '%s\n' "import React from 'react';" "" "export default function Home() {" "  return (" "    <div style={{ padding: 20, fontFamily: 'sans-serif' }}>" "      <h1>KudiTrace AI SRE Platform</h1>" "      <p>Because uptime is money ðŸ’¸</p>" "    </div>" "  );" "}" > "$PAGE_FILE"
            echo "Created $PAGE_FILE"
          fi

          # --- Node backend ---
          NODE_FILE="backend/node/server.js"
          if [ ! -f "$NODE_FILE" ]; then
            printf '%s\n' "const express = require('express');" "const app = express();" "app.get('/', (_, res) => res.send('KudiTrace Node.js API running âœ…'));" "app.listen(3000, () => console.log('Node backend live on port 3000'));" > "$NODE_FILE"
            echo "Created $NODE_FILE"
          fi

          # --- Go backend ---
          GO_FILE="backend/go/main.go"
          if [ ! -f "$GO_FILE" ]; then
            printf '%s\n' 'package main' 'import "fmt"' '' 'func main() {' '  fmt.Println("KudiTrace Go microservice operational âœ…")' '}' > "$GO_FILE"
            echo "Created $GO_FILE"
          fi

          # --- Rust backend ---
          RUST_FILE="backend/rust/main.rs"
          if [ ! -f "$RUST_FILE" ]; then
            printf '%s\n' 'fn main() {' '    println!("KudiTrace Rust performance agent initialized âœ…");' '}' > "$RUST_FILE"
            echo "Created $RUST_FILE"
          fi

          # --- Docs progress ---
          DOC_FILE="docs/progress.md"
          if [ ! -f "$DOC_FILE" ]; then
            printf '%s\n' "# KudiTrace progress log" > "$DOC_FILE"
          fi
          printf '%s\n' "- **$DATE $TIME** â€” Project auto-evolved (bootstrap check)" >> "$DOC_FILE"

          # Commit only if there are changes
          if [ -n "$(git status --porcelain)" ]; then
            git add .
            git commit -m "ðŸª„ Auto-bootstrap: Full-stack scaffold and initial files"
            # push using token
            git remote set-url origin "https://x-access-token:${GH_PAT}@github.com/${{ github.repository }}"
            git push origin HEAD:$(git rev-parse --abbrev-ref HEAD) || true
          else
            echo "No changes to commit"
          fi

      - name: Cache node_modules
        id: cache-npm
        uses: actions/cache@v4
        with:
          path: node_modules
          key: ${{ runner.os }}-modules-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-modules-

      - name: Install dependencies (adaptive)
        run: |
          if [ -f package-lock.json ]; then
            echo "Lock file found â€” using npm ci"
            npm ci
          else
            echo "No lock file â€” installing deps and generating lock file"
            npm install || true
          fi

      - name: Build frontend (if applicable)
        run: |
          if [ -f package.json ]; then
            npm run build || echo "No build script or build failed â€” skipping further build steps."
          else
            echo "No package.json found â€” skipping build."
          fi

      - name: Upload artifacts (optional)
        uses: actions/upload-artifact@v4
        with:
          name: KudiTrace_Build
          path: .next || build || dist || .

