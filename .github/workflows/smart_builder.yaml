name: KudiTrace Smart Bootstrap & Build

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  schedule:
    # Run daily at midnight UTC (1AM Lagos)
    - cron: '0 0 * * *'

jobs:
  evolve:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      # 1Ô∏è‚É£ Checkout repository
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # 2Ô∏è‚É£ Setup Node.js
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: 'npm'

      # 3Ô∏è‚É£ Auto-bootstrap full project if missing
      - name: Bootstrap full-stack project
        run: |
          echo "üß† Checking for existing files..."

          git config user.name "O-BERNARDOFOEGBU"
          git config user.email "obinnaofoegbu71@gmail.com"

          # --- FRONTEND (Next.js + TypeScript) ---
          if [ ! -f "package.json" ]; then
            echo "‚öôÔ∏è Bootstrapping Next.js + TypeScript frontend..."
            npm init -y
            npm install react react-dom next typescript @types/react @types/node
            mkdir -p frontend/pages
            cat <<EOF > frontend/pages/index.tsx
import React from 'react';

export default function Home() {
  return (
    <div style={{ padding: 20, fontFamily: 'sans-serif' }}>
      <h1>KudiTrace AI SRE Platform</h1>
      <p>Because uptime is money üí∏</p>
    </div>
  );
}
EOF

            echo '{"scripts": {"dev": "next dev", "build": "next build", "start": "next start"}}' > tmp.json
            jq -s '.[0] * .[1]' package.json tmp.json > package.tmp && mv package.tmp package.json && rm tmp.json
            npm install --package-lock-only
          fi

          # --- BACKEND: Node.js ---
          mkdir -p backend/node
          NODE_FILE="backend/node/server.js"
          if [ ! -f "$NODE_FILE" ]; then
            echo "üß© Setting up Node backend..."
            cat <<EOF > $NODE_FILE
const express = require('express');
const app = express();
app.get('/', (_, res) => res.send('KudiTrace Node.js API running ‚úÖ'));
app.listen(3000, () => console.log('Node backend live on port 3000'));
EOF
          fi

          # --- BACKEND: Go ---
          mkdir -p backend/go
          GO_FILE="backend/go/main.go"
          if [ ! -f "$GO_FILE" ]; then
            echo "üß© Setting up Go backend..."
            cat <<EOF > $GO_FILE
package main
import "fmt"

func main() {
  fmt.Println("KudiTrace Go microservice operational ‚úÖ")
}
EOF
          fi

          # --- BACKEND: Rust ---
          mkdir -p backend/rust
          RUST_FILE="backend/rust/main.rs"
          if [ ! -f "$RUST_FILE" ]; then
            echo "ü¶Ä Setting up Rust backend..."
            cat <<EOF > $RUST_FILE
fn main() {
    println!("KudiTrace Rust performance agent initialized ‚úÖ");
}
EOF
          fi

          # --- DOCS ---
          mkdir -p docs
          DOC_FILE="docs/progress.md"
          DATE=$(date -u +"%Y-%m-%d")
          TIME=$(date -u +"%H:%M:%S UTC")
          echo "- **$DATE $TIME** ‚Äî Project auto-evolved successfully" >> $DOC_FILE

          git add .
          git commit -m "ü™Ñ Auto-bootstrap: Synced full-stack structure" || echo "No changes to commit"
          git push origin main || echo "Push skipped (no permission in fork)"

      # 4Ô∏è‚É£ Cache dependencies
      - name: Cache node_modules
        id: cache-npm
        uses: actions/cache@v4
        with:
          path: node_modules
          key: ${{ runner.os }}-modules-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-modules-

      # 5Ô∏è‚É£ Install dependencies
      - name: Install dependencies
        run: |
          if [ -f package-lock.json ]; then
            npm ci
          else
            npm install
          fi

      # 6Ô∏è‚É£ Build frontend
      - name: Build frontend
        run: |
          if [ -f package.json ]; then
            npm run build || echo "‚ö†Ô∏è Build script missing ‚Äî skipping."
          fi

      # 7Ô∏è‚É£ Upload build artifacts
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: KudiTrace_Build
          path: .next || build || dist
