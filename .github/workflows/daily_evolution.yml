name: Daily Evolution

on:
  schedule:
    - cron: "0 8 * * *" # Runs daily at 8AM UTC
  workflow_dispatch:
  push:
    branches:
      - main

jobs:
  evolve:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup GitHub CLI
        uses: cli/cli-action@v2
        with:
          version: latest

      - name: Simulate daily progress
        run: |
          echo "üß© Evolving the KudiTrace platform..."
          DATE=$(date)
          echo "- KudiTrace AI SRE Platform evolved on $DATE" >> evolution_log.md
          
          git config --global user.name "Bernard Ofoegbu"
          git config --global user.email "bernardofoegbu@users.noreply.github.com"
          
          git add evolution_log.md
          git commit -m "üî• Daily evolution: $DATE" || echo "No new changes to commit"
          git push || echo "No changes to push"

      - name: Manage milestone issues
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          echo "üîß Managing milestone issues..."

          # Fetch the most recent open issue (if any)
          LAST_ISSUE=$(gh issue list --limit 1 --state open --json number --jq '.[0].number')

          if [ ! -z "$LAST_ISSUE" ]; then
            echo "üí¨ Adding progress comment to issue #$LAST_ISSUE..."
            gh issue comment $LAST_ISSUE --body "‚úÖ Progress Update: Latest work committed to main. Evolution cycle continues as part of the next milestone."

            echo "üö™ Closing issue #$LAST_ISSUE..."
            gh issue close $LAST_ISSUE --comment "Milestone completed successfully üéØ Moving to next phase of KudiTrace evolution."
          else
            echo "‚ÑπÔ∏è No open milestone issues found. Proceeding to create a new one."
          fi

          # Define potential milestone issues
          ISSUES=(
            "Add alerting system for downtime incidents"
            "Implement API latency monitoring dashboard"
            "Integrate Redis and BullMQ for background jobs"
            "Add Prometheus exporter for metrics"
            "Implement distributed tracing with OpenTelemetry"
            "Optimize PostgreSQL queries and add indexes"
            "Integrate Slack alert notifications"
            "Build incident response timeline visualization"
            "Refactor core SRE service modules"
            "Improve test coverage and CI/CD pipeline"
            "Add anomaly detection with adaptive thresholds"
            "Enable canary release monitoring"
            "Enhance error rate visualization dashboard"
          )

          # Randomly select the next milestone
          NEXT_ISSUE="${ISSUES[$RANDOM % ${#ISSUES[@]}]}"
          echo "üéØ Creating new milestone issue: $NEXT_ISSUE"

          # Create new issue
          gh issue create \
            --title "$NEXT_ISSUE" \
            --body "### Next Milestone  
            **Task:** $NEXT_ISSUE  
            **Objective:** Implement $NEXT_ISSUE as part of ongoing KudiTrace evolution.  
            **Owner:** @bernardofoegbu  
            **Priority:** High  
            **Status:** Planned  
            **Notes:** Auto-tracked via daily evolution workflow." \
            --label "enhancement,milestone,next-phase" || echo "‚ö†Ô∏è Issue may already exist. Skipping creation."

      - name: Log completion
        run: |
          echo "üß† Daily evolution cycle completed successfully for $(date)."
