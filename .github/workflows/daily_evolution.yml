name: Daily Evolution & Milestone Progress

on:
  schedule:
    - cron: '0 8 * * *' # Every day at 8 AM UTC
  workflow_dispatch:

jobs:
  evolve:
    runs-on: ubuntu-latest
    timeout-minutes: 30

    env:
      GH_PAT: ${{ secrets.GH_PAT }}
      REPO: ${{ github.repository }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Configure Git
        run: |
          git config --global user.name "Bernard Ofoegbu"
          git config --global user.email "bernardofoegbu@users.noreply.github.com"

      - name: Append daily evolution log
        run: |
          echo "üß© KudiTrace evolution $(date)" >> evolution_log.md
          git add evolution_log.md || true
          git commit -m "üî• Daily evolution $(date +'%Y-%m-%d')" || echo "‚ö†Ô∏è Nothing to commit"
          git push || echo "‚ö†Ô∏è Nothing new to push"

      - name: Install GitHub CLI
        run: |
          sudo apt-get update -y
          sudo apt-get install -y gh || echo "‚ö†Ô∏è GH CLI install failed"
          echo "${GH_PAT}" | gh auth login --with-token || echo "‚ö†Ô∏è GitHub CLI authentication failed"

      - name: Verify GitHub CLI Authentication
        run: |
          if gh auth status; then
            echo "‚úÖ Authenticated with GitHub CLI"
          else
            echo "‚ö†Ô∏è Auth check failed ‚Äî continuing anyway"
          fi

      - name: Create daily milestone and issues
        continue-on-error: true
        run: |
          if ! command -v gh &>/dev/null; then
            echo "‚ùå GH CLI missing. Skipping issue creation."
            exit 0
          fi

          echo "‚úÖ GitHub CLI found, proceeding with milestone creation..."

          MILESTONE_TITLE="Evolution $(date +'%Y-%m-%d')"
          gh api repos/${REPO}/milestones -f title="$MILESTONE_TITLE" -f state="open" || echo "‚ö†Ô∏è Could not create milestone (might already exist)."

          ISSUES=(
            "Implement API latency tracking dashboard"
            "Add AI-driven incident detection"
            "Integrate Slack & email alerting system"
            "Enhance database observability with Postgres metrics"
            "Add SLO and SLA visualization dashboard"
            "Optimize Redis cache performance"
            "Integrate Prometheus & Grafana metrics collection"
            "Build downtime root cause summarizer"
            "Implement OpenTelemetry distributed tracing"
            "Refactor background job manager with BullMQ"
            "Add anomaly-based auto-restart mechanism"
            "Enhance CI/CD for zero-downtime deployments"
          )

          COUNT=$((2 + RANDOM % 2))
          SHUFFLED=$(printf "%s\n" "${ISSUES[@]}" | shuf | head -n $COUNT)

          for ISSUE in $SHUFFLED; do
            echo "üìù Creating issue: $ISSUE"
            gh issue create \
              --repo "${REPO}" \
              --title "${ISSUE}" \
              --body "Part of **${MILESTONE_TITLE}** ‚Äî improving platform reliability and SRE automation." \
              --milestone "${MILESTONE_TITLE}" \
              --label "enhancement,next-phase" \
              || echo "‚ö†Ô∏è Failed to create issue: ${ISSUE}"
          done

          echo "üéØ Daily evolution and milestone cycle complete."
